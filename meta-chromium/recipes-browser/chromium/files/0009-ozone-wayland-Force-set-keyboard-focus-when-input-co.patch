From eb8e370892c2bcba4c93427b0f23c492879dfe13 Mon Sep 17 00:00:00 2001
From: Takuro Ashie <ashie@clear-code.com>
Date: Thu, 1 Jul 2021 15:03:28 +0900
Subject: [PATCH 9/9] [ozone/wayland] Force set keyboard focus when input
 context gets focus

Signed-off-by: Takuro Ashie <ashie@clear-code.com>
---
 .../platform/wayland/host/wayland_input_method_context.cc | 3 +++
 ui/ozone/platform/wayland/host/wayland_toplevel_window.cc | 8 ++++++++
 ui/ozone/platform/wayland/host/wayland_toplevel_window.h  | 2 ++
 ui/ozone/platform/wayland/host/wayland_window.h           | 2 ++
 4 files changed, 15 insertions(+)

diff --git a/ui/ozone/platform/wayland/host/wayland_input_method_context.cc b/ui/ozone/platform/wayland/host/wayland_input_method_context.cc
index f4a27a793fbb1..c4f1e51d579b3 100644
--- a/ui/ozone/platform/wayland/host/wayland_input_method_context.cc
+++ b/ui/ozone/platform/wayland/host/wayland_input_method_context.cc
@@ -20,6 +20,7 @@
 #include "ui/events/keycodes/dom/dom_code.h"
 #include "ui/events/types/event_type.h"
 #include "ui/gfx/range/range.h"
+#include "ui/ozone/platform/wayland/host/wayland_window.h"
 #include "ui/ozone/platform/wayland/host/wayland_connection.h"
 #include "ui/ozone/platform/wayland/host/zwp_text_input_wrapper_v1.h"
 #include "ui/ozone/public/ozone_switches.h"
@@ -162,6 +163,8 @@ void WaylandInputMethodContext::Focus() {
   if (!text_input_ || !window)
     return;
 
+  window->ForceActivate();
+  window->set_keyboard_focus(true);
   text_input_->Activate(window);
   text_input_->ShowInputPanel();
 }
diff --git a/ui/ozone/platform/wayland/host/wayland_toplevel_window.cc b/ui/ozone/platform/wayland/host/wayland_toplevel_window.cc
index 8290a7ea49776..b37f345826c7c 100644
--- a/ui/ozone/platform/wayland/host/wayland_toplevel_window.cc
+++ b/ui/ozone/platform/wayland/host/wayland_toplevel_window.cc
@@ -76,6 +76,14 @@ void WaylandToplevelWindow::ApplyPendingBounds() {
   connection()->ScheduleFlush();
 }
 
+void WaylandToplevelWindow::ForceActivate()
+{
+  if (!is_active_) {
+    is_active_ = true;
+    delegate()->OnActivationChanged(is_active_);
+  }
+}
+
 void WaylandToplevelWindow::DispatchHostWindowDragMovement(
     int hittest,
     const gfx::Point& pointer_location_in_px) {
diff --git a/ui/ozone/platform/wayland/host/wayland_toplevel_window.h b/ui/ozone/platform/wayland/host/wayland_toplevel_window.h
index 849ee9ae60d58..d9961ede66bcd 100644
--- a/ui/ozone/platform/wayland/host/wayland_toplevel_window.h
+++ b/ui/ozone/platform/wayland/host/wayland_toplevel_window.h
@@ -34,6 +34,8 @@ class WaylandToplevelWindow : public WaylandWindow,
   // be called after processing all pending events in the wayland connection.
   void ApplyPendingBounds();
 
+  void ForceActivate() override;
+
   // WmMoveResizeHandler
   void DispatchHostWindowDragMovement(
       int hittest,
diff --git a/ui/ozone/platform/wayland/host/wayland_window.h b/ui/ozone/platform/wayland/host/wayland_window.h
index 8bcc007f76640..edee598614d65 100644
--- a/ui/ozone/platform/wayland/host/wayland_window.h
+++ b/ui/ozone/platform/wayland/host/wayland_window.h
@@ -211,6 +211,8 @@ class WaylandWindow : public PlatformWindow,
   // not support that).
   virtual bool IsActive() const;
 
+  virtual void ForceActivate() {}
+
  protected:
   WaylandWindow(PlatformWindowDelegate* delegate,
                 WaylandConnection* connection);
-- 
2.30.2

